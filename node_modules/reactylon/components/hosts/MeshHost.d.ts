import type { BabylonEntity, RootContainer, UpdatePayload } from '@types';
import type { Mesh, HighlightLayer } from '@babylonjs/core';
import { type MeshProps, type CoreHostProps } from '@props';
type AugmentedMesh = BabylonEntity<MeshProps & Mesh>;
export declare class MeshHost {
    static createInstance(type: string, Class: any, props: CoreHostProps<MeshProps>, rootContainer: RootContainer): any;
    static addChild(parentInstance: BabylonEntity<Mesh | HighlightLayer>, child: AugmentedMesh): void;
    static removeChild(parentInstance: BabylonEntity, child: AugmentedMesh): void;
    static prepareUpdate(): UpdatePayload;
    static commitUpdate(instance: AugmentedMesh, updatePayload: UpdatePayload): void;
}
export {};
