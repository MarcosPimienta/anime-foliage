import type { BabylonEntity, RootContainer, UpdatePayload } from '@types';
import type { Material, Mesh, MultiMaterial } from '@babylonjs/core';
import type { MeshProps, MaterialProps, CoreHostProps } from '@props';
type AugmentedMaterial = BabylonEntity<MaterialProps & Material>;
export declare class MaterialHost {
    static createInstance(type: string, Class: any, props: CoreHostProps<MaterialProps>, rootContainer: RootContainer): any;
    static addChild(parentInstance: BabylonEntity<(Mesh & MeshProps) | MultiMaterial>, child: AugmentedMaterial): void;
    static removeChild(parentInstance: BabylonEntity, child: AugmentedMaterial): void;
    static prepareUpdate(): UpdatePayload;
    static commitUpdate(instance: AugmentedMaterial, updatePayload: UpdatePayload): void;
}
export {};
