import type { BabylonEntity, RootContainer, UpdatePayload } from '@types';
import type { CubeTexture, Texture } from '@babylonjs/core';
import type { CoreHostProps, TextureProps } from '@props';
type AugmentedTexture = BabylonEntity<TextureProps & (Texture | CubeTexture)>;
export declare class TextureHost {
    static createInstance(type: string, Class: any, props: CoreHostProps<TextureProps>, rootContainer: RootContainer): any;
    static addChild(parentInstance: BabylonEntity, child: AugmentedTexture): void;
    static removeChild(parentInstance: BabylonEntity | undefined, child: AugmentedTexture): void;
    static prepareUpdate(): UpdatePayload;
    static commitUpdate(instance: AugmentedTexture, updatePayload: UpdatePayload): void;
}
export {};
